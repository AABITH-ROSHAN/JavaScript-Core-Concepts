// âœ… JavaScript Set Methods Examples

// âœ… 1. new Set() â€” Create a new Set
const letters = new Set(["a", "b", "c"]);
console.log(letters);  
// ğŸ‘‰ Set(3) { 'a', 'b', 'c' }

// âœ… 2. add() â€” Add a new element
letters.add("d");
console.log(letters);  
// ğŸ‘‰ Set(4) { 'a', 'b', 'c', 'd' }

// âœ… 3. delete() â€” Delete an element
letters.delete("b");
console.log(letters);  
// ğŸ‘‰ Set(3) { 'a', 'c', 'd' }

// âœ… 4. has() â€” Check if an element exists
console.log(letters.has("a"));  
// ğŸ‘‰ true
console.log(letters.has("b"));  
// ğŸ‘‰ false

// âœ… 5. clear() â€” Remove all elements
letters.clear();
console.log(letters);  
// ğŸ‘‰ Set(0) {}

// âœ… 6. size â€” Get the number of elements
const numbers = new Set([1, 2, 3, 4]);
console.log(numbers.size);  
// ğŸ‘‰ 4

// âœ… 7. forEach() â€” Loop through Set values
numbers.forEach((value) => {
  console.log(value);  
});
// ğŸ‘‰ 1 2 3 4

// âœ… 8. values() / keys() â€” Get an iterator of values (both are same for Set)
const iter = numbers.values();
for (const val of iter) {
  console.log(val);  
}
// ğŸ‘‰ 1 2 3 4

// âœ… 9. entries() â€” Get key/value pairs (key === value in Set)
const pairs = numbers.entries();
for (const [key, value] of pairs) {
  console.log(key, value);  
}
// ğŸ‘‰ 1 1
// ğŸ‘‰ 2 2
// ğŸ‘‰ 3 3
// ğŸ‘‰ 4 4

// âœ… 10. Spread operator (...) â€” Convert Set to Array
const arr = [...numbers];
console.log(arr);  
// ğŸ‘‰ [1, 2, 3, 4]
